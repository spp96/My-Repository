Ans :-

Method Reference is a wonderful feature introduced in Java 8. Apart from taking advantage of functional programming,
 one of the biggest advantage in using a Lambda expression is to minimize the lines of code. 
 Similarly, Method reference also minimizes lines of code even more than Lambda.
 
 There are following types of method references in java:
1. Reference to a static method.
2. Reference to an instance (non-static) method.
3. Reference to a constructor.
 
 Example:-
 
 Using static method:
 
 interface Sayable{  
    void say();  
}  
public class MethodReference {  
    public static void saySomething(){  
        System.out.println("Hello, this is static method.");  
    }  
    public static void main(String[] args) {  
        // Referring static method  
        Sayable sayable = MethodReference::saySomething;  
        // Calling interface method  
        sayable.say();  
    }  
}


Using non-static method:


public class InstanceMethodReference2 {  
    public void printnMsg(){  
        System.out.println("Hello, this is instance method");  
    }  
    public static void main(String[] args) {  
    Thread t2=new Thread(new InstanceMethodReference2()::printnMsg);  
        t2.start();       
    }  
}

Using Constructor:

interface Messageable{  
    Message getMessage(String msg);  
}  
class Message{  
    Message(String msg){  
        System.out.print(msg);  
    }  
}  
public class ConstructorReference {  
    public static void main(String[] args) {  
        Messageable hello = Message::new;  
        hello.getMessage("Hello");  
    }  
} 
